export declare class DaemonInfo {
    Ip: string;
    Server: string[];
    Config: Map<string, any>;
    Resource: string[];
    constructor();
}
export declare class Message {
    ID: string;
    body: string;
    timestamp: number;
    topic: string;
    constructor();
}
export declare class ClientListInfo {
    offlines: string[];
    online: DaemonInfo[];
    server: string[];
    constructor();
}
export declare class HttpClient {
    private readonly requestAddr;
    private readonly httpClient;
    constructor(address: string, port?: number);
    ping(): Promise<undefined>;
    /**
     *
     * @param topic 主题
     * @param body  内容
     * @param timeout 超时时间
     * @param defer  延迟推送
     * @returns
     */
    PubV2(topic: string, body: any, timeout?: number, defer?: number): Promise<any>;
    /**
     *
     * @param topic 推送消息的主题
     * @param body  推送的消息内容
     * @returns
     */
    Pub(topic: string, body: any): Promise<any>;
    /**
     *  获取所有的客户端信息
     * @returns {ClientListInfo} 客户端信息列表
     */
    getClients(): Promise<ClientListInfo>;
}
//# sourceMappingURL=http.d.ts.map