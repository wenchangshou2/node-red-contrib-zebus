import { HttpClient } from '../src/http';
describe('测试http接口', () => {
    type WsInstanceWithEvent<K extends Event> = {};
    test('测试1', async () => {
        await new Promise<WsInstanceWithEvent<Event> | void>(resolve => {
            let httpClient: HttpClient = new HttpClient("192.168.0.222", 9191)
            console.log('fff')
            httpClient.ping().then(res => {
                console.log('res', res)
                resolve()
            }).catch(err => {
                resolve()
            })
        }).then(e => {
        })
    })
    test('测试消息', async () => {
        await new Promise<WsInstanceWithEvent<Event> | void>(resolve => {
            let httpClient: HttpClient = new HttpClient("192.168.0.222", 9191)
            let data = {
            }
            httpClient.PubV2('/zebus/192.168.10.121/ResourcesService', data, 100).then(res => {
                console.log('res222', res)
                resolve()
            })
        }).then(e => {
            console.log('e', e)
        })
    })
    test('测试消息v1', async () => {
        await new Promise<WsInstanceWithEvent<Event> | void>(resolve => {
            let httpClient: HttpClient = new HttpClient("192.168.0.222", 9191)
            let data = {
            }
            httpClient.Pub('/zebus/192.168.10.121/ResourcesService', data).then(res => {
                console.log('res222', res)
                resolve()
            })
        }).then(e => {
            console.log('e', e)
        })
    })
    test('获取所有客户信息', async () => {
        await new Promise<WsInstanceWithEvent<Event> | void>(resolve => {
            let httpClient: HttpClient = new HttpClient("192.168.0.222", 9191)
            let data = {
            }
            httpClient.getClients().then(res => {
                console.log('res222', res)
                resolve()
            })
        }).then(e => {
            console.log('e', e)
        })

    })
})